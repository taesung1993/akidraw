{"ast":null,"code":"var _jsxFileName = \"/Users/mason/Desktop/MyProject/akidraw/src/components/ProductSection.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductSection(_ref) {\n  let {\n    unit\n  } = _ref;\n  const {\n    options\n  } = unit;\n  console.log(unit);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: options.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          children: value.candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: candidate.id,\n            children: candidate.name\n          }, candidate.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, value.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductSection;\nvar _c;\n$RefreshReg$(_c, \"ProductSection\");","map":{"version":3,"names":["ProductSection","unit","options","console","log","map","value","candidates","candidate","id","name"],"sources":["/Users/mason/Desktop/MyProject/akidraw/src/components/ProductSection.tsx"],"sourcesContent":["import { IShoppingSaleUnit } from \"../api/structures/shoppings/sales/IShoppingSaleUnit\";\n\ninterface Props {\n  unit: IShoppingSaleUnit;\n}\n\nexport default function ProductSection({ unit }: Props) {\n  const { options } = unit;\n  console.log(unit);\n  return (\n    <section>\n      <ul>\n        {options.map((value) => (\n          <li key={value.id}>\n            <select>\n              {value.candidates.map((candidate) => (\n                <option key={candidate.id} value={candidate.id}>\n                  {candidate.name}\n                </option>\n              ))}\n            </select>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n"],"mappings":";;AAMA,eAAe,SAASA,cAAc,OAAkB;EAAA,IAAjB;IAAEC;EAAY,CAAC;EACpD,MAAM;IAAEC;EAAQ,CAAC,GAAGD,IAAI;EACxBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,oBACE;IAAA,uBACE;MAAA,UACGC,OAAO,CAACG,GAAG,CAAEC,KAAK,iBACjB;QAAA,uBACE;UAAA,UACGA,KAAK,CAACC,UAAU,CAACF,GAAG,CAAEG,SAAS,iBAC9B;YAA2B,KAAK,EAAEA,SAAS,CAACC,EAAG;YAAA,UAC5CD,SAAS,CAACE;UAAI,GADJF,SAAS,CAACC,EAAE;YAAA;YAAA;YAAA;UAAA,QAG1B;QAAC;UAAA;UAAA;UAAA;QAAA;MACK,GAPFH,KAAK,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QASlB;IAAC;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACG;AAEd;AAAC,KApBuBT,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}