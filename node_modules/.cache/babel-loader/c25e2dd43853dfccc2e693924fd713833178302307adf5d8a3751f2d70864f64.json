{"ast":null,"code":"var _jsxFileName = \"/Users/mason/Desktop/MyProject/akidraw/src/components/ProductSection.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport OptionSelect from \"./OptionSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOT_SELECT = \"\";\nexport default function ProductSection(_ref) {\n  _s();\n  let {\n    unit,\n    setSelectedStocks\n  } = _ref;\n  const {\n    options,\n    name,\n    stocks\n  } = unit;\n  const [optionkeys, setOptionKeys] = useState([]);\n  const stockKey = useMemo(() => {\n    const allSelectedKeys = optionkeys.length === options.length && optionkeys.every(optionKey => {\n      return optionKey !== NOT_SELECT;\n    });\n    if (!allSelectedKeys) {\n      return null;\n    }\n    return optionkeys.join(\", \");\n  }, [optionkeys, options]);\n  const onSelectOption = (optionIndex, candidateIndex, command) => {\n    setOptionKeys(prev => {\n      const result = prev;\n      const selectedOption = options[optionIndex];\n      const selectedCandidates = selectedOption.candidates[candidateIndex];\n      if (command === \"select\") {\n        result[optionIndex] = selectedCandidates.name;\n      } else {\n        result[optionIndex] = NOT_SELECT;\n      }\n      return [...result];\n    });\n  };\n  useEffect(() => {\n    const getStock = name => {\n      return stocks.find(s => s.name === name);\n    };\n    if (stockKey) {\n      console.log(\"이름:\", name);\n      const stock = getStock(stockKey);\n      console.log(\"선택한 스톡:\", stock);\n    }\n  }, [name, stocks, stockKey]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(OptionSelect, {\n            optionName: option.name,\n            optionIndex: index,\n            candidates: option.candidates,\n            onSelectOption: onSelectOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductSection, \"dm4P1Ach42txYYmgIdkvDZlVaV8=\");\n_c = ProductSection;\nvar _c;\n$RefreshReg$(_c, \"ProductSection\");","map":{"version":3,"names":["useEffect","useMemo","useState","OptionSelect","NOT_SELECT","ProductSection","unit","setSelectedStocks","options","name","stocks","optionkeys","setOptionKeys","stockKey","allSelectedKeys","length","every","optionKey","join","onSelectOption","optionIndex","candidateIndex","command","prev","result","selectedOption","selectedCandidates","candidates","getStock","find","s","console","log","stock","map","option","index","id"],"sources":["/Users/mason/Desktop/MyProject/akidraw/src/components/ProductSection.tsx"],"sourcesContent":["import { Dispatch, useEffect, useMemo, useState } from \"react\";\nimport { IShoppingSaleUnit } from \"../api/structures/shoppings/sales/IShoppingSaleUnit\";\nimport { ISelectedStockMap } from \"../utils/types/ISelectedStockMap\";\nimport OptionSelect from \"./OptionSelect\";\n\ninterface Props {\n  unit: IShoppingSaleUnit;\n  setSelectedStocks: Dispatch<ISelectedStockMap>;\n}\n\nconst NOT_SELECT = \"\";\n\nexport default function ProductSection({ unit, setSelectedStocks }: Props) {\n  const { options, name, stocks } = unit;\n  const [optionkeys, setOptionKeys] = useState<string[]>([]);\n  const stockKey = useMemo(() => {\n    const allSelectedKeys =\n      optionkeys.length === options.length &&\n      optionkeys.every((optionKey) => {\n        return optionKey !== NOT_SELECT;\n      });\n    if (!allSelectedKeys) {\n      return null;\n    }\n    return optionkeys.join(\", \");\n  }, [optionkeys, options]);\n\n  const onSelectOption = (\n    optionIndex: number,\n    candidateIndex: number,\n    command: string\n  ) => {\n    setOptionKeys((prev) => {\n      const result = prev;\n      const selectedOption = options[optionIndex];\n      const selectedCandidates = selectedOption.candidates[candidateIndex];\n\n      if (command === \"select\") {\n        result[optionIndex] = selectedCandidates.name;\n      } else {\n        result[optionIndex] = NOT_SELECT;\n      }\n      return [...result];\n    });\n  };\n\n  useEffect(() => {\n    const getStock = (name: string) => {\n      return stocks.find((s) => s.name === name);\n    };\n\n    if (stockKey) {\n      console.log(\"이름:\", name);\n      const stock = getStock(stockKey);\n      console.log(\"선택한 스톡:\", stock);\n    }\n  }, [name, stocks, stockKey]);\n\n  return (\n    <section>\n      <header>\n        <h6>{name}</h6>\n      </header>\n      <main>\n        <ul>\n          {options.map((option, index) => (\n            <li key={option.id}>\n              <OptionSelect\n                optionName={option.name}\n                optionIndex={index}\n                candidates={option.candidates}\n                onSelectOption={onSelectOption}\n              />\n            </li>\n          ))}\n        </ul>\n      </main>\n    </section>\n  );\n}\n"],"mappings":";;AAAA,SAAmBA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAG9D,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAO1C,MAAMC,UAAU,GAAG,EAAE;AAErB,eAAe,SAASC,cAAc,OAAqC;EAAA;EAAA,IAApC;IAAEC,IAAI;IAAEC;EAAyB,CAAC;EACvE,MAAM;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGJ,IAAI;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAC1D,MAAMW,QAAQ,GAAGZ,OAAO,CAAC,MAAM;IAC7B,MAAMa,eAAe,GACnBH,UAAU,CAACI,MAAM,KAAKP,OAAO,CAACO,MAAM,IACpCJ,UAAU,CAACK,KAAK,CAAEC,SAAS,IAAK;MAC9B,OAAOA,SAAS,KAAKb,UAAU;IACjC,CAAC,CAAC;IACJ,IAAI,CAACU,eAAe,EAAE;MACpB,OAAO,IAAI;IACb;IACA,OAAOH,UAAU,CAACO,IAAI,CAAC,IAAI,CAAC;EAC9B,CAAC,EAAE,CAACP,UAAU,EAAEH,OAAO,CAAC,CAAC;EAEzB,MAAMW,cAAc,GAAG,CACrBC,WAAmB,EACnBC,cAAsB,EACtBC,OAAe,KACZ;IACHV,aAAa,CAAEW,IAAI,IAAK;MACtB,MAAMC,MAAM,GAAGD,IAAI;MACnB,MAAME,cAAc,GAAGjB,OAAO,CAACY,WAAW,CAAC;MAC3C,MAAMM,kBAAkB,GAAGD,cAAc,CAACE,UAAU,CAACN,cAAc,CAAC;MAEpE,IAAIC,OAAO,KAAK,QAAQ,EAAE;QACxBE,MAAM,CAACJ,WAAW,CAAC,GAAGM,kBAAkB,CAACjB,IAAI;MAC/C,CAAC,MAAM;QACLe,MAAM,CAACJ,WAAW,CAAC,GAAGhB,UAAU;MAClC;MACA,OAAO,CAAC,GAAGoB,MAAM,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAM4B,QAAQ,GAAInB,IAAY,IAAK;MACjC,OAAOC,MAAM,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACrB,IAAI,KAAKA,IAAI,CAAC;IAC5C,CAAC;IAED,IAAII,QAAQ,EAAE;MACZkB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEvB,IAAI,CAAC;MACxB,MAAMwB,KAAK,GAAGL,QAAQ,CAACf,QAAQ,CAAC;MAChCkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,KAAK,CAAC;IAC/B;EACF,CAAC,EAAE,CAACxB,IAAI,EAAEC,MAAM,EAAEG,QAAQ,CAAC,CAAC;EAE5B,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UAAKJ;MAAI;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACR,eACT;MAAA,uBACE;QAAA,UACGD,OAAO,CAAC0B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB;UAAA,uBACE,QAAC,YAAY;YACX,UAAU,EAAED,MAAM,CAAC1B,IAAK;YACxB,WAAW,EAAE2B,KAAM;YACnB,UAAU,EAAED,MAAM,CAACR,UAAW;YAC9B,cAAc,EAAER;UAAe;YAAA;YAAA;YAAA;UAAA;QAC/B,GANKgB,MAAM,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAQnB;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd;AAAC,GAnEuBhC,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}