{"ast":null,"code":"var _jsxFileName = \"/Users/mason/Desktop/MyProject/akidraw/src/components/OptionSelect.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OptionSelect(_ref) {\n  let {\n    optionName,\n    optionIndex,\n    candidates,\n    onSelectOption\n  } = _ref;\n  const handleChange = e => {\n    const {\n      target: {\n        value\n      }\n    } = e;\n    const index = +value;\n    const command = value ? \"select\" : \"no-select\";\n    onSelectOption(optionIndex, index, command);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: handleChange,\n    children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: `${optionName} / ${candidate.name}`\n    }, candidate.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = OptionSelect;\nvar _c;\n$RefreshReg$(_c, \"OptionSelect\");","map":{"version":3,"names":["OptionSelect","optionName","optionIndex","candidates","onSelectOption","handleChange","e","target","value","index","command","map","candidate","name","id"],"sources":["/Users/mason/Desktop/MyProject/akidraw/src/components/OptionSelect.tsx"],"sourcesContent":["import { IShoppingSaleUnitOptionCandidate } from \"../api/structures/shoppings/sales/IShoppingSaleUnitOptionCandidate\";\n\ntype Props = {\n  optionName: string;\n  optionIndex: number;\n  candidates: IShoppingSaleUnitOptionCandidate[];\n  onSelectOption: (\n    optionIndex: number,\n    candidateIndex: number,\n    command: string\n  ) => void;\n};\n\nexport default function OptionSelect({\n  optionName,\n  optionIndex,\n  candidates,\n  onSelectOption,\n}: Props) {\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const {\n      target: { value },\n    } = e;\n\n    const index = +value;\n    const command = value ? \"select\" : \"no-select\";\n    onSelectOption(optionIndex, index, command);\n  };\n\n  return (\n    <select onChange={handleChange}>\n      {candidates.map((candidate, index) => (\n        <option key={candidate.id} value={index}>\n          {`${optionName} / ${candidate.name}`}\n        </option>\n      ))}\n    </select>\n  );\n}\n"],"mappings":";;AAaA,eAAe,SAASA,YAAY,OAK1B;EAAA,IAL2B;IACnCC,UAAU;IACVC,WAAW;IACXC,UAAU;IACVC;EACK,CAAC;EACN,MAAMC,YAAY,GAAIC,CAAuC,IAAK;IAChE,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,CAAC;IAEL,MAAMG,KAAK,GAAG,CAACD,KAAK;IACpB,MAAME,OAAO,GAAGF,KAAK,GAAG,QAAQ,GAAG,WAAW;IAC9CJ,cAAc,CAACF,WAAW,EAAEO,KAAK,EAAEC,OAAO,CAAC;EAC7C,CAAC;EAED,oBACE;IAAQ,QAAQ,EAAEL,YAAa;IAAA,UAC5BF,UAAU,CAACQ,GAAG,CAAC,CAACC,SAAS,EAAEH,KAAK,kBAC/B;MAA2B,KAAK,EAAEA,KAAM;MAAA,UACpC,GAAER,UAAW,MAAKW,SAAS,CAACC,IAAK;IAAC,GADzBD,SAAS,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAG1B;EAAC;IAAA;IAAA;IAAA;EAAA,QACK;AAEb;AAAC,KAzBuBd,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}